
public class index {

	
	/*
	  사전적 의미의 Prototype
	  
	  	원형 : 본, 표준, 모범
	  	
	  	옛날의 유사물
	  	
	자바에서는
		생산 비용이 높은 인스턴스를 복사를 통해서 쉽게 생성할 수 있도록 하는 패턴
			인스턴스 생산 비용이 높은 경우에는
				종류가 너무 많아 클래스로 정리되지 않는 경우
				클래스로부터 인스턴스 생성이 어려운 경우가 있다.
	  
	 */
	
	/*
	  		요구사항
	  		
	  일러스트레이터와 같은 그림 그리기 툴을 개발 중입니다.
	  어떤 모양(Shape)을 그릴 수 있도록 하고 복사 붙여넣기 기능을 구현해 주세요.
	 */



	/*
	 프로토타입 패턴에서 사용될 메소드의 역할들
	  Prototype : 인스턴스를 복사하여 새로운 인스턴스를 만들기 위한 메소드 결정
	  ConcretrPrototype: 인스턴스를 복사해서 새로운 인스턴스를 만드는 메소드를 실제로 구현
	  Clint : 인스턴스 복사 메소드를 사용해서 새로운 인스턴스를 만든다.
	  
	   implements Cloneable (객체 복제)
		 
		 clone() 메소드를 이용
		 	객체를 복사해서 사용하는 이유는 객체가 복잡하거나,
		 	객체 내용 값이 계속 바뀐다면 객체 생성이 어렵기 때문에 복사해서 사용해야 할 경우가 있다.
		 	
		 	객체를 복사하기 위해서는 implements Cloneable 인터페이스를 구현해야한다.
		 	이 인터페이스에는 아무것도 없지만, 객체 복사가능 여부만 알려줄뿐이다.
		 	
		 	clone() 오버라이딩 부분이나 오버라이딩을 하지 않더라도,
		 	다른 메소드 이름을 사용하더라도 반드시 return super.clone() 를 구현해야 한다.
		 	
		 	Object클래스의 clone()를 보면 반드시 try catch 를 구현해야 한다 CloneNotSupportedException 구현
		 	
		 	
		 	clone() 메소드는 java.lang package에 있는 조상 class Object에 있다.
		 	
		 	Object 클래스의 각종 메소드는 오버라이딩 해서(재정의) 해서 사용 가능.
		 		이유 : 모든 클래스는 Object클래스를 상속 받기 때문에
		 		
		 	clone()메소드는 다른 Object메소드 와 달리 protected이기 떄문에 같은 package가 아니면 상속받아 사용해야 한다.
	 */
}
